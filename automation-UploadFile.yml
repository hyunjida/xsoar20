args:
- description: File entry ID.
  isArray: true
  name: entryID
  predefined:
  - ""
  required: true
- description: Incident ID to upload the file to.
  name: incID
  required: true
- description: Request body.
  name: body
- auto: PREDEFINED
  defaultValue: war room entry
  description: |-
    Where to upload the file
    - Available options are:
    - `war room entry`: the file will be uploaded as war room entry.
    - `incident attachment`: the file will be uploaded as incident attachment.
    - default are `war room entry`.
  name: target
  predefined:
  - war room entry
  - incident attachment
comment: Copies a file from this incident to the specified incident. The file is recorded
  as an entry in the specified incidentâ€™s War Room.
commonfields:
  id: UploadFile
  version: -1
contentitemexportablefields:
  contentitemfields:
    definitionid: ""
    fromServerVersion: 6.5.0
    itemVersion: 1.3.50
    packID: DemistoRESTAPI
    packName: Cortex REST API
    packPropagationLabels:
    - all
    prevname: ""
    propagationLabels: []
    toServerVersion: ""
dependson:
  must:
  - core-api-multipart
dockerimage: demisto/python3:3.10.13.86272
enabled: true
engineinfo: {}
mainengineinfo: {}
name: UploadFile
pswd: ""
runas: DBotWeakRole
runonce: false
script: |
  register_module_line('UploadFile', 'start', __line__())
  ### pack version: 1.3.50




  def upload_file(incident_id: str, entry_id: str, body: str = '', as_incident_attachment: bool = True):
      service_name = 'incident' if as_incident_attachment else 'entry'
      return demisto.executeCommand("core-api-multipart",
                                    {"uri": f'{service_name}/upload/{incident_id}', "entryID": entry_id, "body": body})


  def upload_file_command(args: dict) -> list[CommandResults]:
      command_results: list[CommandResults] = []
      incident_id = args.get('incID', '')
      entry_ids = argToList(args.get('entryID', ''))
      body = args.get('body', '')
      target = args.get('target', 'war room entry')
      for entry_id in entry_ids:
          response = upload_file(incident_id, entry_id, body, target == 'incident attachment')
          if is_error(response[0]):
              raise DemistoException("There was an issue uploading the file. Check your API key and input arguments.")

          uploaded_entry_id = demisto.dt(response, 'Contents.response.entries.id')
          readable = 'File uploaded successfully.'
          # in case the file uploaded as war room entry
          if uploaded_entry_id:
              readable += f' Entry ID is {uploaded_entry_id}'
          if body:
              readable += f'. Comment is:{body}'
          command_results.append(CommandResults(readable_output=readable, raw_response=response))
      return command_results


  def main():
      try:
          return_results(upload_file_command(demisto.args()))
      except Exception as err:
          return_error(str(err))


  if __name__ in ['__main__', 'builtin', 'builtins']:
      main()

  register_module_line('UploadFile', 'end', __line__())
scripttarget: 0
subtype: python3
system: true
tags:
- DemistoAPI
type: python
